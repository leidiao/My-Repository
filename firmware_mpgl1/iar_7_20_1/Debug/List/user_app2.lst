###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        05/Jun/2016  16:10:31
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpg_common\application\user_app2.c
#    Command line =  
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpg_common\application\user_app2.c
#        -D MPGL1 -D MPG1 --preprocess=cl
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -lC
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\ -o
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        E:\EIE\arm\INC\c\DLib_Config_Normal.h -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\ -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\bsp\ -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\drivers\ -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\application\
#        -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline -I E:\EIE\arm\CMSIS\Include\
#    List file    =  
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\user_app2.lst
#    Object file  =  
#        E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\user_app2.o
#
###############################################################################

E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpg_common\application\user_app2.c
      1          /**********************************************************************************************************************
      2          File: user_app2.c                                                                
      3          
      4          ----------------------------------------------------------------------------------------------------------------------
      5          To start a new task using this user_app2 as a template:
      6           1. Copy both user_app2.c and user_app2.h to the Application directory
      7           2. Rename the files yournewtaskname.c and yournewtaskname.h
      8           3. Add yournewtaskname.c and yournewtaskname.h to the Application Include and Source groups in the IAR project
      9           4. Use ctrl-h (make sure "Match Case" is checked) to find and replace all instances of "user_app2" with "yournewtaskname"
     10           5. Use ctrl-h to find and replace all instances of "UserApp2" with "YourNewTaskName"
     11           6. Use ctrl-h to find and replace all instances of "USER_APP2" with "YOUR_NEW_TASK_NAME"
     12           7. Add a call to YourNewTaskNameInitialize() in the init section of main
     13           8. Add a call to YourNewTaskNameRunActiveState() in the Super Loop section of main
     14           9. Update yournewtaskname.h per the instructions at the top of yournewtaskname.h
     15          10. Delete this text (between the dashed lines) and update the Description below to describe your task
     16          ----------------------------------------------------------------------------------------------------------------------
     17          
     18          Description:
     19          This is a user_app2.c file template 
     20          
     21          ------------------------------------------------------------------------------------------------------------------------
     22          API:
     23          
     24          Public functions:
     25          
     26          
     27          Protected System functions:
     28          void UserApp2Initialize(void)
     29          Runs required initialzation for the task.  Should only be called once in main init section.
     30          
     31          void UserApp2RunActiveState(void)
     32          Runs current task state.  Should only be called once in main loop.
     33          
     34          
     35          **********************************************************************************************************************/
     36          
     37          #include "configuration.h"
     38          
     39          /***********************************************************************************************************************
     40          Global variable definitions with scope across entire project.
     41          All Global variable names shall start with "G_"
     42          ***********************************************************************************************************************/
     43          /* New variables */

   \                                 In section .bss, align 4
     44          volatile u32 G_u32UserApp2Flags;                       /* Global state flags */
   \                     G_u32UserApp2Flags:
   \   00000000                      DS8 4
     45          
     46          
     47          /*--------------------------------------------------------------------------------------------------------------------*/
     48          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     49          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     50          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     51          
     52          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     53          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     54          extern u8 G_u8Index2;
     55          extern u8 G_u8Char2[7];
     56          extern u8 G_u8Count;
     57          extern bool G_Sign;
     58          /***********************************************************************************************************************
     59          Global variable definitions with scope limited to this local application.
     60          Variable names shall start with "UserApp2_" and be declared as static.
     61          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     62          static fnCode_type UserApp2_StateMachine;            /* The state machine function pointer */
   \                     UserApp2_StateMachine:
   \   00000000                      DS8 4
     63          static u32 UserApp2_u32Timeout;                      /* Timeout counter used across states */
     64          
     65          
     66          /**********************************************************************************************************************
     67          Function Definitions
     68          **********************************************************************************************************************/
     69          
     70          /*--------------------------------------------------------------------------------------------------------------------*/
     71          /* Public functions                                                                                                   */
     72          /*--------------------------------------------------------------------------------------------------------------------*/
     73          
     74          
     75          /*--------------------------------------------------------------------------------------------------------------------*/
     76          /* Protected functions                                                                                                */
     77          /*--------------------------------------------------------------------------------------------------------------------*/
     78          
     79          /*--------------------------------------------------------------------------------------------------------------------
     80          Function: UserApp2Initialize
     81          
     82          Description:
     83          Initializes the State Machine and its variables.
     84          
     85          Requires:
     86            -
     87          
     88          Promises:
     89            - 
     90          */

   \                                 In section .text, align 2, keep-with-next
     91          void UserApp2Initialize(void)
     92          {
     93          
     94            
     95            /* If good initialization, set state to Idle */
     96            if( 1 )
     97            {
     98              UserApp2_StateMachine = UserApp2SM_Idle;
   \                     UserApp2Initialize: (+1)
   \   00000000   0x.... 0x....      ADR.W    R0,UserApp2SM_Idle
   \   00000004   0x....             LDR.N    R1,??DataTable2
   \   00000006   0x6008             STR      R0,[R1, #+0]
     99            }
    100            else
    101            {
    102              /* The task isn't properly initialized, so shut it down and don't run */
    103              UserApp2_StateMachine = UserApp2SM_FailedInit;
    104            }
    105          
    106          } /* end UserApp2Initialize() */
   \   00000008   0x4770             BX       LR               ;; return
    107          
    108          
    109          /*----------------------------------------------------------------------------------------------------------------------
    110          Function UserApp2RunActiveState()
    111          
    112          Description:
    113          Selects and runs one iteration of the current state in the state machine.
    114          All state machines have a TOTAL of 1ms to execute, so on average n state machines
    115          may take 1ms / n to execute.
    116          
    117          Requires:
    118            - State machine function pointer points at current state
    119          
    120          Promises:
    121            - Calls the function to pointed by the state machine function pointer
    122          */

   \                                 In section .text, align 2, keep-with-next
    123          void UserApp2RunActiveState(void)
    124          {
   \                     UserApp2RunActiveState: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    125            UserApp2_StateMachine();
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x4780             BLX      R0
    126          
    127          } /* end UserApp2RunActiveState */
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    128          
    129          
    130          /*--------------------------------------------------------------------------------------------------------------------*/
    131          /* Private functions                                                                                                  */
    132          /*--------------------------------------------------------------------------------------------------------------------*/
    133          
    134          
    135          /**********************************************************************************************************************
    136          State Machine Function Definitions
    137          **********************************************************************************************************************/
    138          
    139          /*-------------------------------------------------------------------------------------------------------------------*/
    140          /* Wait for a message to be queued */

   \                                 In section .text, align 4, keep-with-next
    141          static void UserApp2SM_Idle(void)
    142          {
   \                     UserApp2SM_Idle: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    143            /*used to time*/
    144            static u16  u16Count2=5000;
    145            
    146            /*used to answer when to time*/
    147            static bool flag=FALSE;
    148            
    149            /*used to remind*/
    150            static u8   String7[]="\n\rMy name is:";
    151            static u8   String8[]="\n\rI have Print:";
    152            static u8   String9[]="time(s).\n\r";
    153            
    154            /*The eleventh function*/
    155            if(G_Sign)
   \   00000002   0x....             LDR.N    R0,??DataTable2_1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD023             BEQ.N    ??UserApp2SM_Idle_0
    156            {
    157              G_Sign=FALSE;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x....             LDR.N    R1,??DataTable2_1
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    158              PWMAudioSetFrequency(BUZZER1, 500);
   \   00000010   0xF44F 0x71FA      MOV      R1,#+500
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       PWMAudioSetFrequency
    159              PWMAudioOn(BUZZER1);
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       PWMAudioOn
    160              LedBlink(RED, LED_2HZ);
   \   00000020   0x21FA             MOVS     R1,#+250
   \   00000022   0x2007             MOVS     R0,#+7
   \   00000024   0x.... 0x....      BL       LedBlink
    161              DebugPrintf(String7);
   \   00000028   0x....             LDR.N    R0,??DataTable2_2
   \   0000002A   0x.... 0x....      BL       DebugPrintf
    162              DebugPrintf(G_u8Char2);
   \   0000002E   0x....             LDR.N    R0,??DataTable2_3
   \   00000030   0x.... 0x....      BL       DebugPrintf
    163              DebugLineFeed();
   \   00000034   0x.... 0x....      BL       DebugLineFeed
    164              DebugPrintf(String8);
   \   00000038   0x....             LDR.N    R0,??DataTable2_4
   \   0000003A   0x.... 0x....      BL       DebugPrintf
    165              DebugPrintNumber(G_u8Count);
   \   0000003E   0x....             LDR.N    R0,??DataTable2_5
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0x.... 0x....      BL       DebugPrintNumber
    166              DebugPrintf(String9);
   \   00000046   0x....             LDR.N    R0,??DataTable2_6
   \   00000048   0x.... 0x....      BL       DebugPrintf
    167              flag=TRUE;
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x....             LDR.N    R1,??DataTable2_7
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    168            }
    169            
    170            /*Time*/
    171            if(flag)
   \                     ??UserApp2SM_Idle_0: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable2_7
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD015             BEQ.N    ??UserApp2SM_Idle_1
    172            {
    173              u16Count2--;
   \   0000005A   0x....             LDR.N    R0,??DataTable2_8
   \   0000005C   0x8800             LDRH     R0,[R0, #+0]
   \   0000005E   0x1E40             SUBS     R0,R0,#+1
   \   00000060   0x....             LDR.N    R1,??DataTable2_8
   \   00000062   0x8008             STRH     R0,[R1, #+0]
    174              if(u16Count2==0)
   \   00000064   0x....             LDR.N    R0,??DataTable2_8
   \   00000066   0x8800             LDRH     R0,[R0, #+0]
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD10C             BNE.N    ??UserApp2SM_Idle_1
    175              {
    176                u16Count2=5000;
   \   0000006C   0xF241 0x3088      MOVW     R0,#+5000
   \   00000070   0x....             LDR.N    R1,??DataTable2_8
   \   00000072   0x8008             STRH     R0,[R1, #+0]
    177                PWMAudioOff(BUZZER1);
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      BL       PWMAudioOff
    178                LedOff(RED);
   \   0000007A   0x2007             MOVS     R0,#+7
   \   0000007C   0x.... 0x....      BL       LedOff
    179                flag=FALSE;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x....             LDR.N    R1,??DataTable2_7
   \   00000084   0x7008             STRB     R0,[R1, #+0]
    180              }  
    181            }
    182          
    183          
    184          } /* end UserApp2SM_Idle() */
   \                     ??UserApp2SM_Idle_1: (+1)
   \   00000086   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 2
   \                     ??u16Count2:
   \   00000000   0x1388             DC16 5000

   \                                 In section .bss, align 1
   \                     ??flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \                     ??String7:
   \   00000000   0x0A 0x0D          DC8 "\012\015My name is:"
   \              0x4D 0x79    
   \              0x20 0x6E    
   \              0x61 0x6D    
   \              0x65 0x20    
   \              0x69 0x73    
   \              0x3A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .data, align 4
   \                     ??String8:
   \   00000000   0x0A 0x0D          DC8 "\012\015I have Print:"
   \              0x49 0x20    
   \              0x68 0x61    
   \              0x76 0x65    
   \              0x20 0x50    
   \              0x72 0x69    
   \              0x6E 0x74    
   \              0x3A 0x00    

   \                                 In section .data, align 4
   \                     ??String9:
   \   00000000   0x74 0x69          DC8 "time(s).\012\015"
   \              0x6D 0x65    
   \              0x28 0x73    
   \              0x29 0x2E    
   \              0x0A 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     UserApp2_StateMachine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     G_Sign

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ??String7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     G_u8Char2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ??String8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     G_u8Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ??String9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ??flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ??u16Count2
    185               
    186          
    187          /*-------------------------------------------------------------------------------------------------------------------*/
    188          /* Handle an error */
    189          static void UserApp2SM_Error(void)          
                             ^
Warning[Pe177]: function "UserApp2SM_Error" was declared but never referenced

  static u32 UserApp2_u32Timeout;                      /* Timeout counter used across states */
             ^
"E:\EIE\EiE\MASTER\Razor_Atmel\firmware_mpg_common\application\user_app2.c",63  Warning[Pe177]: 
          variable "UserApp2_u32Timeout" was declared but never referenced
    190          {
    191            
    192          } /* end UserApp2SM_Error() */
    193          
    194          
    195          /*-------------------------------------------------------------------------------------------------------------------*/
    196          /* State to sit in if init failed */
    197          static void UserApp2SM_FailedInit(void)          
    198          {
    199              
    200          } /* end UserApp2SM_FailedInit() */
    201          
    202          
    203          /*--------------------------------------------------------------------------------------------------------------------*/
    204          /* End of File                                                                                                        */
    205          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   UserApp2Initialize
       8   UserApp2RunActiveState
         8   -- Indirect call
       8   UserApp2SM_Idle
         8   -> DebugLineFeed
         8   -> DebugPrintNumber
         8   -> DebugPrintf
         8   -> LedBlink
         8   -> LedOff
         8   -> PWMAudioOff
         8   -> PWMAudioOn
         8   -> PWMAudioSetFrequency


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  G_u32UserApp2Flags
      16  String7
      16  String8
      12  String9
      10  UserApp2Initialize
      10  UserApp2RunActiveState
     136  UserApp2SM_Idle
       4  UserApp2_StateMachine
       1  flag
       2  u16Count2

 
   9 bytes in section .bss
  46 bytes in section .data
 192 bytes in section .text
 
 192 bytes of CODE memory
  55 bytes of DATA memory

Errors: none
Warnings: 2
